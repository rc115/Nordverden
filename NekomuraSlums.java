/* 
* Rigoberto Castro
* Roberto Mata
* Jennifer Millan
* Delil Tursun
* Kanishq Viradiya
* 
* CS2011 Final: Text Based Adventure Game
* Project Name: Nekomura Slums
*
*    _____   __    ______                                        
*    ___  | / /_______  /______________ _______  ______________ _
*    __   |/ /_  _ \_  //_/  __ \_  __ `__ \  / / /_  ___/  __ `/
*    _  /|  / /  __/  ,<  / /_/ /  / / / / / /_/ /_  /   / /_/ / 
*    /_/ |_/  \___//_/|_| \____//_/ /_/ /_/\__,_/ /_/    \__,_/  
*                                         ______             
*                                        / __/ /_ ____ _  ___
*                                       _\ \/ / // /  ' \(_-<
*                                      /___/_/\_,_/_/_/_/___/
*
* Ascii art generated by: https://www.patorjk.com/software/taag/#p=display&f=Speed&t=Nekomura
*
* Inspirations: Fallout 1 & 2 by Interplay, TES: Skyrim by Bethesda
* Mechanics inpired by the youtuber Magic The Noah
* 
*/



import java.util.Scanner;
import java.util.Random;



public class NekomuraSlums {

    static Scanner input = new Scanner(System.in);
    static Random rand = new Random();

    static String welcomeMsg = (
          "\n"
        + "\n    Welcome to"
        + "\n    _____   __    ______                                          "
        + "\n    ___  | / /_______  /______________ _______  ______________ _  "
        + "\n    __   |/ /_  _ \\_  //_/  __ \\_  __ `__ \\  / / /_  ___/  __ `/  "
        + "\n    _  /|  / /  __/  ,<  / /_/ /  / / / / / /_/ /_  /   / /_/ /   "
        + "\n    /_/ |_/  \\___//_/|_| \\____//_/ /_/ /_/\\__,_/ /_/    \\__,_/    "
        + "\n                                         ______                   "
        + "\n                                        / __/ /_ ____ _  ___      "
        + "\n                                       _\\ \\/ / // /  ' \\(_-<      "
        + "\n                                      /___/_/\\_,_/_/_/_/___/      "
        + "\n                                       Version 0.001.103124"
        + "\n" 
    );
// --->   Function Junction   <---



// Method for taking the user's input (also gives user more options like quiting)
static String playerSelection(){
    String pSel = "";
    pSel = input.next();

    if (pSel.equals("exit")) {
        System.out.println("\nGoodbye\n");
        input.close();
        System.exit(0);
    }

    if (pSel.equals("admin")) {
        //adminChar();
    }

    System.out.println("\n____________________________________________________________________________________________________\n");

    return pSel;
}

// Method that clears the screen
static void clearConsole() {
    System.out.println("\n____________________________________________________________________________________________________\n");
    System.out.println("Clearing Screen...");
    try {
        Thread.sleep(2000); // Waits 2 secs before clearing screen
    } catch (InterruptedException e) {
        Thread.currentThread().interrupt();
    }

    for (int i = 0; i < 50; i++) {
        System.out.println("\n\n");
    }
}





// -->  Character Creator  <--

// !!! NOTE: GLOBAL VARIABLES MIGHT NOT BE ALLOWED IN THE FINAL  !!!
static String kName = "Kara";

static int kStrength = 0;
static int kSpeech = 0;
static int kStamina = 0;
static int kSneak = 0;
static boolean skillsConfirmed = false;

static double sharpDmg = 0.0;
static double bluntDmg = 0.0;
static double elementalDmg = 0.0;
static double rangedDmg = 0.0;
static boolean dmgMulConfirmed = false;

public static void characterCreator() {
    int skillPts = 40;
    double dmgPts = 2.0;

    // Sets the player-character's(Kara) name
    if (kName.equals("Kara")) {
        System.out.println("\n____________________________________________________________________________________________________\n");
        System.out.print("    What is your character's name: ");

        String newName = input.nextLine();
        kName = newName;

        System.out.println("\n    " + kName + " is your character's name.\n"
            + "\n1. Confirm name\n2. Change name\n"
        );

        switch(playerSelection()) {
            case "1": break;
            default: kName = "Kara"; characterCreator();
        }
    }

    // Sets Kara's skills
    if (!skillsConfirmed) {
        while (skillPts > 0) {
            System.out.println("What skill would you like to assign 10 points to:");
            System.out.println("\n1. Strength\n2. Speech\n3. Stamina\n4. Sneak\n");

            switch (playerSelection()) {
                case "1":
                    System.out.println("10 points have been assigned to Strength!");
                    kStrength += 10;
                    skillPts -= 10;
                    break;
                case "2":
                    System.out.println("10 points have been assigned to Speech!");
                    kSpeech += 10;
                    skillPts -= 10;
                    break;
                case "3":
                    System.out.println("10 points have been assigned to Stamina!");
                    kStamina+= 10;
                    skillPts -= 10;
                    break;
                case "4":
                    System.out.println("10 points have been assigned to Sneak!");
                    kSneak += 10;
                    skillPts -= 10;
                    break;
                default:
                    System.out.println("That's not an option.");
                    continue;
            }

            System.out.println("Points Available: " + skillPts);
    
        }

        System.out.println("These are " + kName + "'s skills:");
        System.out.println(
              "Strength (" + kStrength + ")\n"
            + "Speech (" + kSpeech + ")\n"
            + "Stamina (" + kStamina + ")\n"
            + "Sneak (" + kSneak + ")\n"
        );
        System.out.println("Are you happy with these or would you like to change them?");
        System.out.println("\n1. Continue\n2. Reset Skills\n");

        switch(playerSelection()) {
            case "2":
                kStrength = 0;
                kSpeech = 0;
                kStamina = 0;
                kSneak = 0;
                clearConsole();
                characterCreator();
                break;
            default: System.out.println("Skills Confirmed!"); skillsConfirmed = true;
        }
    }

    // Sets Kara's Damage multipliers
    if (!dmgMulConfirmed) {
        while (dmgPts > 0) {
            System.out.println("What damage multiplier would you like to assign 0.5 points to:");
            System.out.println("\n1. Sharp\n2. Blunt\n3. Elemental\n4. Ranged\n");

            switch (playerSelection()) {
                case "1":
                    System.out.println("0.5 points have been assigned to Sharp Damage!");
                    sharpDmg += 0.5;
                    dmgPts -= 0.5;
                    break;
                case "2":
                    System.out.println("0.5 points have been assigned to Blunt Damage!");
                    bluntDmg += 0.5;
                    dmgPts -= 0.5;
                    break;
                case "3":
                    System.out.println("0.5 points have been assigned to Elemental Damage!");
                    elementalDmg += 0.5;
                    dmgPts -= 0.5;
                    break;
                case "4":
                    System.out.println("0.5 points have been assigned to Ranged Damage!");
                    rangedDmg += 0.5;
                    dmgPts -= 0.5;
                    break;
                default:
                    System.out.println("That's not an option.");
                    continue;
            }

            System.out.println("Points Available: " + dmgPts);
    
        }

        System.out.println("These are " + kName + "'s Damage Multipliers:");
        System.out.println(
              "Sharp (" + sharpDmg + ")\n"
            + "Blunt (" + bluntDmg + ")\n"
            + "Elemental (" + elementalDmg + ")\n"
            + "Ranged (" + rangedDmg + ")\n"
        );
        System.out.println("Are you happy with these or would you like to change them?");
        System.out.println("\n1. Continue\n2. Reset Skills\n");
    
        switch(playerSelection()) {
            case "2":
                sharpDmg = 0.0;
                bluntDmg = 0.0;
                elementalDmg = 0.0;
                rangedDmg = 0.0;
                clearConsole();
                characterCreator();
                break;
            default: System.out.println("Damage Multipliers Confirmed!"); dmgMulConfirmed = true;
        }
    }

    System.out.println("What was " + kName + "'s occupation?");
    System.out.println("\n1. Sushi Chef\n2. Steel Worker\n3. Farmer\n4. Catnip Dealer\n5. CEO\n");

}
























// --->   End Of Function Junction   <---
    public static void main(String args[]){

        System.out.println(welcomeMsg);

        characterCreator();

        System.out.println("\n\nGame loop ended... Entering debug area\n\n");

        System.out.println("KARA STATS:\n");
        System.out.println(
              "NAME: " + kName + "\n\n"
            + "SKILLS:\n"
            + "Strength (" + kStrength + ")\n"
            + "Speech (" + kSpeech + ")\n"
            + "Stamina (" + kStamina + ")\n"
            + "Sneak (" + kSneak + ")\n\n"
            + "DMG MULT:\n"
            + "Sharp (" + sharpDmg + ")\n"
            + "Blunt (" + bluntDmg + ")\n"
            + "Elemental (" + elementalDmg + ")\n"
            + "Ranged (" + rangedDmg + ")\n\n"
            + "WEAPON: {NULL}\n"
            + "DAMAGE: {NULL}\n\n"
            + "ARMOUR: {NULL}\n"
            + "DAMAGE RESISTANCE: {NULL}\n\n"
        );

        // NPC Fight test
        //addNPC("Silly Fella", 100, 10, "Bladed", 100, true);
        //addNPC("Goober", 100, 10, "Blunt", 100, true);
        //pHealth -= 50;
        //gotMad();


        // Dragon Fight test
        //equipWeapon("Dragonn KLR 20mm Anti-Matiriel Rifle");
        //addNPC("Dragon", 500, 50, "Fire", 100, true);
        //gotMad();

        System.out.println("\n\nThats it for now. Thanks for playing :)\n\n");
    }
}
